package tasc.bookstore.repository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.domain.Specification;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import tasc.bookstore.dto.response.UserResponse;
import tasc.bookstore.entity.Product;
import tasc.bookstore.entity.User;

import java.util.List;
import java.util.Optional;

@Repository
public interface UserRepository extends JpaRepository<User, Long>, JpaSpecificationExecutor<User> {
    Page<User> findAll(Specification<User> spec, Pageable pageable);

    boolean existsByEmail(String email);
    //Optional l√† wrapper, cho bi·∫øt k·∫øt qu·∫£ c√≥ th·ªÉ c√≥ ho·∫∑c kh√¥ng.
    //N·∫øu email t·ªìn t·∫°i trong DB ‚Üí Optional<User> ch·ª©a user.
    //N·∫øu kh√¥ng t·ªìn t·∫°i ‚Üí Optional.empty().
    //üëâ ƒêi·ªÅu n√†y gi√∫p b·∫°n tr√°nh l·ªói NullPointerException v√¨ kh√¥ng c·∫ßn tr·∫£ v·ªÅ null.
    Optional<User> findByEmail(String email);

    //ƒê√¢y l√† class-based projection.
    //JPA s·∫Ω kh·ªüi t·∫°o tr·ª±c ti·∫øp object UserResponse cho m·ªói row tr·∫£ v·ªÅ t·ª´ DB.
    //C√°c gi√° tr·ªã u.email, u.password, ... ƒë∆∞·ª£c truy·ªÅn v√†o constructor c·ªßa UserResponse.
    //triu v·∫•n n√†y d√πng jpql (d√πng t√™n class v√† field c·ªßa entity ch·ª© ko ph·∫£i c·ªßa db)
    @Query("SELECT new tasc.bookstore.dto.response.UserResponse(" +
            "u.email, u.password, u.fullname, u.phone, u.address, u.role) " +
            "FROM User u " +
            "WHERE u.fullname = :fullname")
    List<UserResponse> findUsersByFullname(@Param("fullname") String fullname);

}
